### **总结要点**：**在 React 中管理状态**  

**任务**：  
在这次练习中，初始代码包含两个组件：  
1. **Fruits 组件**：拥有自己的状态，并在屏幕上输出三个水果。  
2. **FruitsCounter 组件**：显示一条信息，例如“Total fruits: 2”（总水果数量：2）。  

你的任务是将状态从 **Fruits 组件**提升到 **App 组件**，以便状态可以同时传递给 **Fruits 组件**和 **FruitsCounter 组件**。  
目标是修复错误的总数信息“Total fruits: 2”，改为动态显示“Total fruits: 3”。输出的消息应反映状态数组中的水果数量，而非硬编码的字符串。  

---

### **步骤**  

#### **步骤 1**:  
将状态从 **Fruits 组件**迁移到 **App 组件**。  

- 初始代码：  
  - **App 组件**没有状态，简单渲染 `<Fruits />` 和 `<FruitsCounter />`。  
  - **Fruits 组件**使用自己的状态，存储水果信息并输出到屏幕。  

- 更新后：  
  - 将 **Fruits 组件**中的状态迁移到 **App 组件**。  
  - 状态迁移完成后，**Fruits 组件**将不再管理自己的状态，而是从父组件 **App** 接收状态作为 `props`。  

---

#### **步骤 2**:  
更新 **Fruits 组件**以接收从 **App 组件**传递的状态。  

---

#### **步骤 3**:  
更新 **FruitsCounter 组件**以接收从 **App 组件**传递的状态。  

- 使用 `fruits` 状态数组的 `length` 属性动态显示水果总数。  
- 例如，`FruitsCounter` 应动态显示“Total fruits: 3”，而非硬编码字符串。  

---

#### **步骤 4**:  
保存更改并运行应用，验证以下几点：  
- 水果总数信息显示正确。  
- 应用的其他功能保持不变。  